#---
# Excerpted from "Ash Framework",
# published by The Pragmatic Bookshelf.
# Copyrights apply to this code. It may not be used to create training material,
# courses, books, articles, and the like. Contact us if you are in doubt.
# We make no guarantees that this code is fit for any purpose.
# Visit https://pragprog.com/titles/ldash for more book information.
#---
# The final version of this file at the end of this chapter can be found at
# https://github.com/sevenseacat/tunez/blob/end-of-chapter-1/lib/tunez/music.ex

# ------------------------------------------------------------------------------
# Context: The initial Music domain as generated by `ash.gen.domain`
defmodule Tunez.Music do
  use Ash.Domain, otp_app: :tunez

  resources do
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Adding a code interface function for the Artist `create` action
resources do
  resource Tunez.Music.Artist do
    define :create_artist, action: :create
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Adding a code interface function for the Artist `read` action
resource Tunez.Music.Artist do
  # ...
  define :read_artists, action: :read
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Adding a code interface function to get a single record by primary key
resource Tunez.Music.Artist do
  # ...
  define :get_artist_by_id, action: :read, get_by: :id
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Adding a code interface function for the Artist `update` action
resource Tunez.Music.Artist do
  # ...
  define :update_artist, action: :update
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Adding a code interface function for the Artist `destroy` action
resource Tunez.Music.Artist do
  # ...
  define :destroy_artist, action: :destroy
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Adding the AshPhoenix extension to allow calling `Tunez.Music.form_to_*`
defmodule Tunez.Music do
  use Ash.Domain, otp_app: :tunez, extensions: [AshPhoenix]

  # ...
# ------------------------------------------------------------------------------
