#---
# Excerpted from "Ash Framework",
# published by The Pragmatic Bookshelf.
# Copyrights apply to this code. It may not be used to create training material,
# courses, books, articles, and the like. Contact us if you are in doubt.
# We make no guarantees that this code is fit for any purpose.
# Visit https://pragprog.com/titles/ldash for more book information.
#---
# The final version of this file at the end of this chapter can be found at
# https://github.com/sevenseacat/tunez/blob/end-of-chapter-1/lib/tunez/music/artist.ex

# ------------------------------------------------------------------------------
# Context: The initial Artist resource as generated by `ash.gen.resource`
defmodule Tunez.Music.Artist do
  use Ash.Resource, otp_app: :tunez, domain: Tunez.Music,
    data_layer: AshPostgres.DataLayer

  postgres do
    table "artists"
    repo Tunez.Repo
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Adding the first set of attributes to the Artist resource
defmodule Tunez.Music.Artist do
  # ...

  attributes do
    uuid_primary_key :id

    attribute :name, :string do
      allow_nil? false
    end

    attribute :biography, :string

    create_timestamp :inserted_at
    update_timestamp :updated_at
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Where to place the new `actions` block in the Artist resource
defmodule Tunez.Music.Artist do
  # ...

  actions do
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Defining a `create` action
actions do
  create :create do
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Adding attributes to accept, to the create action
actions do
  create :create do
    accept [:name, :biography]
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Defining a primary `read` action
actions do
  # ...
  read :read do
    primary? true
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Defining an `update` action with attributes to accept
actions do
  # ...
  update :update do
    accept [:name, :biography]
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Defining a `destroy` action
actions do
  # ...
  destroy :destroy do
  end
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Using `defaults` as a shortcut for defining empty actions
actions do
  defaults [:create, :read, :update, :destroy]
end
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Context: Defining attributes that can be accepted by default actions
actions do
  defaults [:create, :read, :update, :destroy]
  default_accept [:name, :biography]
end
# ------------------------------------------------------------------------------
